// Mocks generated by Mockito 5.4.4 from annotations
// in ditonton/test/helpers/test_helper.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i8;
import 'dart:convert' as _i44;
import 'dart:typed_data' as _i45;

import 'package:dartz/dartz.dart' as _i2;
import 'package:ditonton_core/ditonton_core.dart' as _i9;
import 'package:ditonton_movie/src/data/datasources/movie_local_data_source.dart'
    as _i14;
import 'package:ditonton_movie/src/data/datasources/movie_remote_data_source.dart'
    as _i12;
import 'package:ditonton_movie/src/data/models/movie_detail_model.dart' as _i3;
import 'package:ditonton_movie/src/data/models/movie_model.dart' as _i13;
import 'package:ditonton_movie/src/data/models/movie_table.dart' as _i15;
import 'package:ditonton_movie/src/domain/entities/movie.dart' as _i10;
import 'package:ditonton_movie/src/domain/entities/movie_detail.dart' as _i11;
import 'package:ditonton_movie/src/domain/repositories/movie_repository.dart'
    as _i5;
import 'package:ditonton_movie/src/domain/usecases/get_movie_detail.dart'
    as _i27;
import 'package:ditonton_movie/src/domain/usecases/get_movie_recommendations.dart'
    as _i28;
import 'package:ditonton_movie/src/domain/usecases/get_now_playing_movies.dart'
    as _i24;
import 'package:ditonton_movie/src/domain/usecases/get_popular_movies.dart'
    as _i25;
import 'package:ditonton_movie/src/domain/usecases/get_top_rated_movies.dart'
    as _i26;
import 'package:ditonton_movie/src/domain/usecases/get_watchlist_movies.dart'
    as _i32;
import 'package:ditonton_movie/src/domain/usecases/get_watchlist_status.dart'
    as _i29;
import 'package:ditonton_movie/src/domain/usecases/remove_watchlist.dart'
    as _i31;
import 'package:ditonton_movie/src/domain/usecases/save_watchlist.dart' as _i30;
import 'package:ditonton_movie/src/domain/usecases/search_movies.dart' as _i33;
import 'package:ditonton_tv_series/src/data/datasources/tv_series_local_data_source.dart'
    as _i21;
import 'package:ditonton_tv_series/src/data/datasources/tv_series_remote_data_source.dart'
    as _i19;
import 'package:ditonton_tv_series/src/data/models/tv_series_detail_model.dart'
    as _i4;
import 'package:ditonton_tv_series/src/data/models/tv_series_model.dart'
    as _i20;
import 'package:ditonton_tv_series/src/data/models/tv_series_table.dart'
    as _i22;
import 'package:ditonton_tv_series/src/domain/entities/tv_series.dart' as _i17;
import 'package:ditonton_tv_series/src/domain/entities/tv_series_detail.dart'
    as _i18;
import 'package:ditonton_tv_series/src/domain/repositories/tv_series_repository.dart'
    as _i6;
import 'package:ditonton_tv_series/src/domain/usecases/get_on_the_air_tv_series.dart'
    as _i34;
import 'package:ditonton_tv_series/src/domain/usecases/get_popular_tv_series.dart'
    as _i35;
import 'package:ditonton_tv_series/src/domain/usecases/get_top_rated_tv_series.dart'
    as _i36;
import 'package:ditonton_tv_series/src/domain/usecases/get_tv_series_detail.dart'
    as _i37;
import 'package:ditonton_tv_series/src/domain/usecases/get_tv_series_recommendations.dart'
    as _i38;
import 'package:ditonton_tv_series/src/domain/usecases/get_tv_watchlist_status.dart'
    as _i39;
import 'package:ditonton_tv_series/src/domain/usecases/get_watchlist_tv_series.dart'
    as _i42;
import 'package:ditonton_tv_series/src/domain/usecases/remove_tv_watchlist.dart'
    as _i41;
import 'package:ditonton_tv_series/src/domain/usecases/save_tv_watchlist.dart'
    as _i40;
import 'package:ditonton_tv_series/src/domain/usecases/search_tv_series.dart'
    as _i43;
import 'package:http/http.dart' as _i7;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i16;
import 'package:sqflite/sqflite.dart' as _i23;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeEither_0<L, R> extends _i1.SmartFake implements _i2.Either<L, R> {
  _FakeEither_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeMovieDetailResponse_1 extends _i1.SmartFake
    implements _i3.MovieDetailResponse {
  _FakeMovieDetailResponse_1(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeTVSeriesDetailResponse_2 extends _i1.SmartFake
    implements _i4.TVSeriesDetailResponse {
  _FakeTVSeriesDetailResponse_2(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeMovieRepository_3 extends _i1.SmartFake
    implements _i5.MovieRepository {
  _FakeMovieRepository_3(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeTVSeriesRepository_4 extends _i1.SmartFake
    implements _i6.TVSeriesRepository {
  _FakeTVSeriesRepository_4(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeResponse_5 extends _i1.SmartFake implements _i7.Response {
  _FakeResponse_5(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

class _FakeStreamedResponse_6 extends _i1.SmartFake
    implements _i7.StreamedResponse {
  _FakeStreamedResponse_6(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [MovieRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieRepository extends _i1.Mock implements _i5.MovieRepository {
  MockMovieRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>> getNowPlayingMovies() =>
      (super.noSuchMethod(
            Invocation.method(#getNowPlayingMovies, []),
            returnValue:
                _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>>.value(
                  _FakeEither_0<_i9.Failure, List<_i10.Movie>>(
                    this,
                    Invocation.method(#getNowPlayingMovies, []),
                  ),
                ),
          )
          as _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>>);

  @override
  _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>> getPopularMovies() =>
      (super.noSuchMethod(
            Invocation.method(#getPopularMovies, []),
            returnValue:
                _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>>.value(
                  _FakeEither_0<_i9.Failure, List<_i10.Movie>>(
                    this,
                    Invocation.method(#getPopularMovies, []),
                  ),
                ),
          )
          as _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>>);

  @override
  _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>> getTopRatedMovies() =>
      (super.noSuchMethod(
            Invocation.method(#getTopRatedMovies, []),
            returnValue:
                _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>>.value(
                  _FakeEither_0<_i9.Failure, List<_i10.Movie>>(
                    this,
                    Invocation.method(#getTopRatedMovies, []),
                  ),
                ),
          )
          as _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>>);

  @override
  _i8.Future<_i2.Either<_i9.Failure, _i11.MovieDetail>> getMovieDetail(
    int? id,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getMovieDetail, [id]),
            returnValue:
                _i8.Future<_i2.Either<_i9.Failure, _i11.MovieDetail>>.value(
                  _FakeEither_0<_i9.Failure, _i11.MovieDetail>(
                    this,
                    Invocation.method(#getMovieDetail, [id]),
                  ),
                ),
          )
          as _i8.Future<_i2.Either<_i9.Failure, _i11.MovieDetail>>);

  @override
  _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>> getMovieRecommendations(
    int? id,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getMovieRecommendations, [id]),
            returnValue:
                _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>>.value(
                  _FakeEither_0<_i9.Failure, List<_i10.Movie>>(
                    this,
                    Invocation.method(#getMovieRecommendations, [id]),
                  ),
                ),
          )
          as _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>>);

  @override
  _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>> searchMovies(
    String? query,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#searchMovies, [query]),
            returnValue:
                _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>>.value(
                  _FakeEither_0<_i9.Failure, List<_i10.Movie>>(
                    this,
                    Invocation.method(#searchMovies, [query]),
                  ),
                ),
          )
          as _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>>);

  @override
  _i8.Future<_i2.Either<_i9.Failure, String>> saveWatchlist(
    _i11.MovieDetail? movie,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#saveWatchlist, [movie]),
            returnValue: _i8.Future<_i2.Either<_i9.Failure, String>>.value(
              _FakeEither_0<_i9.Failure, String>(
                this,
                Invocation.method(#saveWatchlist, [movie]),
              ),
            ),
          )
          as _i8.Future<_i2.Either<_i9.Failure, String>>);

  @override
  _i8.Future<_i2.Either<_i9.Failure, String>> removeWatchlist(
    _i11.MovieDetail? movie,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#removeWatchlist, [movie]),
            returnValue: _i8.Future<_i2.Either<_i9.Failure, String>>.value(
              _FakeEither_0<_i9.Failure, String>(
                this,
                Invocation.method(#removeWatchlist, [movie]),
              ),
            ),
          )
          as _i8.Future<_i2.Either<_i9.Failure, String>>);

  @override
  _i8.Future<bool> isAddedToWatchlist(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#isAddedToWatchlist, [id]),
            returnValue: _i8.Future<bool>.value(false),
          )
          as _i8.Future<bool>);

  @override
  _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>> getWatchlistMovies() =>
      (super.noSuchMethod(
            Invocation.method(#getWatchlistMovies, []),
            returnValue:
                _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>>.value(
                  _FakeEither_0<_i9.Failure, List<_i10.Movie>>(
                    this,
                    Invocation.method(#getWatchlistMovies, []),
                  ),
                ),
          )
          as _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>>);
}

/// A class which mocks [MovieRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieRemoteDataSource extends _i1.Mock
    implements _i12.MovieRemoteDataSource {
  MockMovieRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<List<_i13.MovieModel>> getNowPlayingMovies() =>
      (super.noSuchMethod(
            Invocation.method(#getNowPlayingMovies, []),
            returnValue: _i8.Future<List<_i13.MovieModel>>.value(
              <_i13.MovieModel>[],
            ),
          )
          as _i8.Future<List<_i13.MovieModel>>);

  @override
  _i8.Future<List<_i13.MovieModel>> getPopularMovies() =>
      (super.noSuchMethod(
            Invocation.method(#getPopularMovies, []),
            returnValue: _i8.Future<List<_i13.MovieModel>>.value(
              <_i13.MovieModel>[],
            ),
          )
          as _i8.Future<List<_i13.MovieModel>>);

  @override
  _i8.Future<List<_i13.MovieModel>> getTopRatedMovies() =>
      (super.noSuchMethod(
            Invocation.method(#getTopRatedMovies, []),
            returnValue: _i8.Future<List<_i13.MovieModel>>.value(
              <_i13.MovieModel>[],
            ),
          )
          as _i8.Future<List<_i13.MovieModel>>);

  @override
  _i8.Future<_i3.MovieDetailResponse> getMovieDetail(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#getMovieDetail, [id]),
            returnValue: _i8.Future<_i3.MovieDetailResponse>.value(
              _FakeMovieDetailResponse_1(
                this,
                Invocation.method(#getMovieDetail, [id]),
              ),
            ),
          )
          as _i8.Future<_i3.MovieDetailResponse>);

  @override
  _i8.Future<List<_i13.MovieModel>> getMovieRecommendations(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#getMovieRecommendations, [id]),
            returnValue: _i8.Future<List<_i13.MovieModel>>.value(
              <_i13.MovieModel>[],
            ),
          )
          as _i8.Future<List<_i13.MovieModel>>);

  @override
  _i8.Future<List<_i13.MovieModel>> searchMovies(String? query) =>
      (super.noSuchMethod(
            Invocation.method(#searchMovies, [query]),
            returnValue: _i8.Future<List<_i13.MovieModel>>.value(
              <_i13.MovieModel>[],
            ),
          )
          as _i8.Future<List<_i13.MovieModel>>);
}

/// A class which mocks [MovieLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockMovieLocalDataSource extends _i1.Mock
    implements _i14.MovieLocalDataSource {
  MockMovieLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<String> insertWatchlist(_i15.MovieTable? movie) =>
      (super.noSuchMethod(
            Invocation.method(#insertWatchlist, [movie]),
            returnValue: _i8.Future<String>.value(
              _i16.dummyValue<String>(
                this,
                Invocation.method(#insertWatchlist, [movie]),
              ),
            ),
          )
          as _i8.Future<String>);

  @override
  _i8.Future<String> removeWatchlist(_i15.MovieTable? movie) =>
      (super.noSuchMethod(
            Invocation.method(#removeWatchlist, [movie]),
            returnValue: _i8.Future<String>.value(
              _i16.dummyValue<String>(
                this,
                Invocation.method(#removeWatchlist, [movie]),
              ),
            ),
          )
          as _i8.Future<String>);

  @override
  _i8.Future<_i15.MovieTable?> getMovieById(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#getMovieById, [id]),
            returnValue: _i8.Future<_i15.MovieTable?>.value(),
          )
          as _i8.Future<_i15.MovieTable?>);

  @override
  _i8.Future<List<_i15.MovieTable>> getWatchlistMovies() =>
      (super.noSuchMethod(
            Invocation.method(#getWatchlistMovies, []),
            returnValue: _i8.Future<List<_i15.MovieTable>>.value(
              <_i15.MovieTable>[],
            ),
          )
          as _i8.Future<List<_i15.MovieTable>>);
}

/// A class which mocks [TVSeriesRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockTVSeriesRepository extends _i1.Mock
    implements _i6.TVSeriesRepository {
  MockTVSeriesRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<_i2.Either<_i9.Failure, List<_i17.TVSeries>>>
  getOnTheAirTVSeries() =>
      (super.noSuchMethod(
            Invocation.method(#getOnTheAirTVSeries, []),
            returnValue:
                _i8.Future<_i2.Either<_i9.Failure, List<_i17.TVSeries>>>.value(
                  _FakeEither_0<_i9.Failure, List<_i17.TVSeries>>(
                    this,
                    Invocation.method(#getOnTheAirTVSeries, []),
                  ),
                ),
          )
          as _i8.Future<_i2.Either<_i9.Failure, List<_i17.TVSeries>>>);

  @override
  _i8.Future<_i2.Either<_i9.Failure, List<_i17.TVSeries>>>
  getPopularTVSeries() =>
      (super.noSuchMethod(
            Invocation.method(#getPopularTVSeries, []),
            returnValue:
                _i8.Future<_i2.Either<_i9.Failure, List<_i17.TVSeries>>>.value(
                  _FakeEither_0<_i9.Failure, List<_i17.TVSeries>>(
                    this,
                    Invocation.method(#getPopularTVSeries, []),
                  ),
                ),
          )
          as _i8.Future<_i2.Either<_i9.Failure, List<_i17.TVSeries>>>);

  @override
  _i8.Future<_i2.Either<_i9.Failure, List<_i17.TVSeries>>>
  getTopRatedTVSeries() =>
      (super.noSuchMethod(
            Invocation.method(#getTopRatedTVSeries, []),
            returnValue:
                _i8.Future<_i2.Either<_i9.Failure, List<_i17.TVSeries>>>.value(
                  _FakeEither_0<_i9.Failure, List<_i17.TVSeries>>(
                    this,
                    Invocation.method(#getTopRatedTVSeries, []),
                  ),
                ),
          )
          as _i8.Future<_i2.Either<_i9.Failure, List<_i17.TVSeries>>>);

  @override
  _i8.Future<_i2.Either<_i9.Failure, _i18.TVSeriesDetail>> getTVSeriesDetail(
    int? id,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#getTVSeriesDetail, [id]),
            returnValue:
                _i8.Future<_i2.Either<_i9.Failure, _i18.TVSeriesDetail>>.value(
                  _FakeEither_0<_i9.Failure, _i18.TVSeriesDetail>(
                    this,
                    Invocation.method(#getTVSeriesDetail, [id]),
                  ),
                ),
          )
          as _i8.Future<_i2.Either<_i9.Failure, _i18.TVSeriesDetail>>);

  @override
  _i8.Future<_i2.Either<_i9.Failure, List<_i17.TVSeries>>>
  getTVSeriesRecommendations(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#getTVSeriesRecommendations, [id]),
            returnValue:
                _i8.Future<_i2.Either<_i9.Failure, List<_i17.TVSeries>>>.value(
                  _FakeEither_0<_i9.Failure, List<_i17.TVSeries>>(
                    this,
                    Invocation.method(#getTVSeriesRecommendations, [id]),
                  ),
                ),
          )
          as _i8.Future<_i2.Either<_i9.Failure, List<_i17.TVSeries>>>);

  @override
  _i8.Future<_i2.Either<_i9.Failure, List<_i17.TVSeries>>> searchTVSeries(
    String? query,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#searchTVSeries, [query]),
            returnValue:
                _i8.Future<_i2.Either<_i9.Failure, List<_i17.TVSeries>>>.value(
                  _FakeEither_0<_i9.Failure, List<_i17.TVSeries>>(
                    this,
                    Invocation.method(#searchTVSeries, [query]),
                  ),
                ),
          )
          as _i8.Future<_i2.Either<_i9.Failure, List<_i17.TVSeries>>>);

  @override
  _i8.Future<_i2.Either<_i9.Failure, String>> saveWatchlist(
    _i18.TVSeriesDetail? tvSeries,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#saveWatchlist, [tvSeries]),
            returnValue: _i8.Future<_i2.Either<_i9.Failure, String>>.value(
              _FakeEither_0<_i9.Failure, String>(
                this,
                Invocation.method(#saveWatchlist, [tvSeries]),
              ),
            ),
          )
          as _i8.Future<_i2.Either<_i9.Failure, String>>);

  @override
  _i8.Future<_i2.Either<_i9.Failure, String>> removeWatchlist(
    _i18.TVSeriesDetail? tvSeries,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#removeWatchlist, [tvSeries]),
            returnValue: _i8.Future<_i2.Either<_i9.Failure, String>>.value(
              _FakeEither_0<_i9.Failure, String>(
                this,
                Invocation.method(#removeWatchlist, [tvSeries]),
              ),
            ),
          )
          as _i8.Future<_i2.Either<_i9.Failure, String>>);

  @override
  _i8.Future<bool> isAddedToWatchlist(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#isAddedToWatchlist, [id]),
            returnValue: _i8.Future<bool>.value(false),
          )
          as _i8.Future<bool>);

  @override
  _i8.Future<_i2.Either<_i9.Failure, List<_i17.TVSeries>>>
  getWatchlistTVSeries() =>
      (super.noSuchMethod(
            Invocation.method(#getWatchlistTVSeries, []),
            returnValue:
                _i8.Future<_i2.Either<_i9.Failure, List<_i17.TVSeries>>>.value(
                  _FakeEither_0<_i9.Failure, List<_i17.TVSeries>>(
                    this,
                    Invocation.method(#getWatchlistTVSeries, []),
                  ),
                ),
          )
          as _i8.Future<_i2.Either<_i9.Failure, List<_i17.TVSeries>>>);
}

/// A class which mocks [TVSeriesRemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockTVSeriesRemoteDataSource extends _i1.Mock
    implements _i19.TVSeriesRemoteDataSource {
  MockTVSeriesRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<List<_i20.TVSeriesModel>> getOnTheAirTVSeries() =>
      (super.noSuchMethod(
            Invocation.method(#getOnTheAirTVSeries, []),
            returnValue: _i8.Future<List<_i20.TVSeriesModel>>.value(
              <_i20.TVSeriesModel>[],
            ),
          )
          as _i8.Future<List<_i20.TVSeriesModel>>);

  @override
  _i8.Future<List<_i20.TVSeriesModel>> getPopularTVSeries() =>
      (super.noSuchMethod(
            Invocation.method(#getPopularTVSeries, []),
            returnValue: _i8.Future<List<_i20.TVSeriesModel>>.value(
              <_i20.TVSeriesModel>[],
            ),
          )
          as _i8.Future<List<_i20.TVSeriesModel>>);

  @override
  _i8.Future<List<_i20.TVSeriesModel>> getTopRatedTVSeries() =>
      (super.noSuchMethod(
            Invocation.method(#getTopRatedTVSeries, []),
            returnValue: _i8.Future<List<_i20.TVSeriesModel>>.value(
              <_i20.TVSeriesModel>[],
            ),
          )
          as _i8.Future<List<_i20.TVSeriesModel>>);

  @override
  _i8.Future<_i4.TVSeriesDetailResponse> getTVSeriesDetail(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#getTVSeriesDetail, [id]),
            returnValue: _i8.Future<_i4.TVSeriesDetailResponse>.value(
              _FakeTVSeriesDetailResponse_2(
                this,
                Invocation.method(#getTVSeriesDetail, [id]),
              ),
            ),
          )
          as _i8.Future<_i4.TVSeriesDetailResponse>);

  @override
  _i8.Future<List<_i20.TVSeriesModel>> getTVSeriesRecommendations(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#getTVSeriesRecommendations, [id]),
            returnValue: _i8.Future<List<_i20.TVSeriesModel>>.value(
              <_i20.TVSeriesModel>[],
            ),
          )
          as _i8.Future<List<_i20.TVSeriesModel>>);

  @override
  _i8.Future<List<_i20.TVSeriesModel>> searchTVSeries(String? query) =>
      (super.noSuchMethod(
            Invocation.method(#searchTVSeries, [query]),
            returnValue: _i8.Future<List<_i20.TVSeriesModel>>.value(
              <_i20.TVSeriesModel>[],
            ),
          )
          as _i8.Future<List<_i20.TVSeriesModel>>);
}

/// A class which mocks [TVSeriesLocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockTVSeriesLocalDataSource extends _i1.Mock
    implements _i21.TVSeriesLocalDataSource {
  MockTVSeriesLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<String> insertWatchlist(_i22.TVSeriesTable? tvSeries) =>
      (super.noSuchMethod(
            Invocation.method(#insertWatchlist, [tvSeries]),
            returnValue: _i8.Future<String>.value(
              _i16.dummyValue<String>(
                this,
                Invocation.method(#insertWatchlist, [tvSeries]),
              ),
            ),
          )
          as _i8.Future<String>);

  @override
  _i8.Future<String> removeWatchlist(_i22.TVSeriesTable? tvSeries) =>
      (super.noSuchMethod(
            Invocation.method(#removeWatchlist, [tvSeries]),
            returnValue: _i8.Future<String>.value(
              _i16.dummyValue<String>(
                this,
                Invocation.method(#removeWatchlist, [tvSeries]),
              ),
            ),
          )
          as _i8.Future<String>);

  @override
  _i8.Future<_i22.TVSeriesTable?> getTVSeriesById(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#getTVSeriesById, [id]),
            returnValue: _i8.Future<_i22.TVSeriesTable?>.value(),
          )
          as _i8.Future<_i22.TVSeriesTable?>);

  @override
  _i8.Future<List<_i22.TVSeriesTable>> getWatchlistTVSeries() =>
      (super.noSuchMethod(
            Invocation.method(#getWatchlistTVSeries, []),
            returnValue: _i8.Future<List<_i22.TVSeriesTable>>.value(
              <_i22.TVSeriesTable>[],
            ),
          )
          as _i8.Future<List<_i22.TVSeriesTable>>);
}

/// A class which mocks [DatabaseHelper].
///
/// See the documentation for Mockito's code generation for more information.
class MockDatabaseHelper extends _i1.Mock implements _i9.DatabaseHelper {
  MockDatabaseHelper() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<_i23.Database?> get database =>
      (super.noSuchMethod(
            Invocation.getter(#database),
            returnValue: _i8.Future<_i23.Database?>.value(),
          )
          as _i8.Future<_i23.Database?>);

  @override
  _i8.Future<int> insertWatchlist(Map<String, dynamic>? movie) =>
      (super.noSuchMethod(
            Invocation.method(#insertWatchlist, [movie]),
            returnValue: _i8.Future<int>.value(0),
          )
          as _i8.Future<int>);

  @override
  _i8.Future<int> removeWatchlist(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#removeWatchlist, [id]),
            returnValue: _i8.Future<int>.value(0),
          )
          as _i8.Future<int>);

  @override
  _i8.Future<Map<String, dynamic>?> getMovieById(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#getMovieById, [id]),
            returnValue: _i8.Future<Map<String, dynamic>?>.value(),
          )
          as _i8.Future<Map<String, dynamic>?>);

  @override
  _i8.Future<List<Map<String, dynamic>>> getWatchlistMovies() =>
      (super.noSuchMethod(
            Invocation.method(#getWatchlistMovies, []),
            returnValue: _i8.Future<List<Map<String, dynamic>>>.value(
              <Map<String, dynamic>>[],
            ),
          )
          as _i8.Future<List<Map<String, dynamic>>>);

  @override
  _i8.Future<int> insertTVWatchlist(Map<String, dynamic>? tv) =>
      (super.noSuchMethod(
            Invocation.method(#insertTVWatchlist, [tv]),
            returnValue: _i8.Future<int>.value(0),
          )
          as _i8.Future<int>);

  @override
  _i8.Future<int> removeTVWatchlist(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#removeTVWatchlist, [id]),
            returnValue: _i8.Future<int>.value(0),
          )
          as _i8.Future<int>);

  @override
  _i8.Future<Map<String, dynamic>?> getTVSeriesById(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#getTVSeriesById, [id]),
            returnValue: _i8.Future<Map<String, dynamic>?>.value(),
          )
          as _i8.Future<Map<String, dynamic>?>);

  @override
  _i8.Future<List<Map<String, dynamic>>> getWatchlistTVSeries() =>
      (super.noSuchMethod(
            Invocation.method(#getWatchlistTVSeries, []),
            returnValue: _i8.Future<List<Map<String, dynamic>>>.value(
              <Map<String, dynamic>>[],
            ),
          )
          as _i8.Future<List<Map<String, dynamic>>>);
}

/// A class which mocks [GetNowPlayingMovies].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetNowPlayingMovies extends _i1.Mock
    implements _i24.GetNowPlayingMovies {
  MockGetNowPlayingMovies() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.MovieRepository get repository =>
      (super.noSuchMethod(
            Invocation.getter(#repository),
            returnValue: _FakeMovieRepository_3(
              this,
              Invocation.getter(#repository),
            ),
          )
          as _i5.MovieRepository);

  @override
  _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>> execute() =>
      (super.noSuchMethod(
            Invocation.method(#execute, []),
            returnValue:
                _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>>.value(
                  _FakeEither_0<_i9.Failure, List<_i10.Movie>>(
                    this,
                    Invocation.method(#execute, []),
                  ),
                ),
          )
          as _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>>);
}

/// A class which mocks [GetPopularMovies].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetPopularMovies extends _i1.Mock implements _i25.GetPopularMovies {
  MockGetPopularMovies() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.MovieRepository get repository =>
      (super.noSuchMethod(
            Invocation.getter(#repository),
            returnValue: _FakeMovieRepository_3(
              this,
              Invocation.getter(#repository),
            ),
          )
          as _i5.MovieRepository);

  @override
  _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>> execute() =>
      (super.noSuchMethod(
            Invocation.method(#execute, []),
            returnValue:
                _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>>.value(
                  _FakeEither_0<_i9.Failure, List<_i10.Movie>>(
                    this,
                    Invocation.method(#execute, []),
                  ),
                ),
          )
          as _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>>);
}

/// A class which mocks [GetTopRatedMovies].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetTopRatedMovies extends _i1.Mock implements _i26.GetTopRatedMovies {
  MockGetTopRatedMovies() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.MovieRepository get repository =>
      (super.noSuchMethod(
            Invocation.getter(#repository),
            returnValue: _FakeMovieRepository_3(
              this,
              Invocation.getter(#repository),
            ),
          )
          as _i5.MovieRepository);

  @override
  _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>> execute() =>
      (super.noSuchMethod(
            Invocation.method(#execute, []),
            returnValue:
                _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>>.value(
                  _FakeEither_0<_i9.Failure, List<_i10.Movie>>(
                    this,
                    Invocation.method(#execute, []),
                  ),
                ),
          )
          as _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>>);
}

/// A class which mocks [GetMovieDetail].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetMovieDetail extends _i1.Mock implements _i27.GetMovieDetail {
  MockGetMovieDetail() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.MovieRepository get repository =>
      (super.noSuchMethod(
            Invocation.getter(#repository),
            returnValue: _FakeMovieRepository_3(
              this,
              Invocation.getter(#repository),
            ),
          )
          as _i5.MovieRepository);

  @override
  _i8.Future<_i2.Either<_i9.Failure, _i11.MovieDetail>> execute(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#execute, [id]),
            returnValue:
                _i8.Future<_i2.Either<_i9.Failure, _i11.MovieDetail>>.value(
                  _FakeEither_0<_i9.Failure, _i11.MovieDetail>(
                    this,
                    Invocation.method(#execute, [id]),
                  ),
                ),
          )
          as _i8.Future<_i2.Either<_i9.Failure, _i11.MovieDetail>>);
}

/// A class which mocks [GetMovieRecommendations].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetMovieRecommendations extends _i1.Mock
    implements _i28.GetMovieRecommendations {
  MockGetMovieRecommendations() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.MovieRepository get repository =>
      (super.noSuchMethod(
            Invocation.getter(#repository),
            returnValue: _FakeMovieRepository_3(
              this,
              Invocation.getter(#repository),
            ),
          )
          as _i5.MovieRepository);

  @override
  _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>> execute(dynamic id) =>
      (super.noSuchMethod(
            Invocation.method(#execute, [id]),
            returnValue:
                _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>>.value(
                  _FakeEither_0<_i9.Failure, List<_i10.Movie>>(
                    this,
                    Invocation.method(#execute, [id]),
                  ),
                ),
          )
          as _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>>);
}

/// A class which mocks [GetWatchListStatus].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetWatchListStatus extends _i1.Mock
    implements _i29.GetWatchListStatus {
  MockGetWatchListStatus() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.MovieRepository get repository =>
      (super.noSuchMethod(
            Invocation.getter(#repository),
            returnValue: _FakeMovieRepository_3(
              this,
              Invocation.getter(#repository),
            ),
          )
          as _i5.MovieRepository);

  @override
  _i8.Future<bool> execute(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#execute, [id]),
            returnValue: _i8.Future<bool>.value(false),
          )
          as _i8.Future<bool>);
}

/// A class which mocks [SaveWatchlist].
///
/// See the documentation for Mockito's code generation for more information.
class MockSaveWatchlist extends _i1.Mock implements _i30.SaveWatchlist {
  MockSaveWatchlist() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.MovieRepository get repository =>
      (super.noSuchMethod(
            Invocation.getter(#repository),
            returnValue: _FakeMovieRepository_3(
              this,
              Invocation.getter(#repository),
            ),
          )
          as _i5.MovieRepository);

  @override
  _i8.Future<_i2.Either<_i9.Failure, String>> execute(
    _i11.MovieDetail? movie,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#execute, [movie]),
            returnValue: _i8.Future<_i2.Either<_i9.Failure, String>>.value(
              _FakeEither_0<_i9.Failure, String>(
                this,
                Invocation.method(#execute, [movie]),
              ),
            ),
          )
          as _i8.Future<_i2.Either<_i9.Failure, String>>);
}

/// A class which mocks [RemoveWatchlist].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoveWatchlist extends _i1.Mock implements _i31.RemoveWatchlist {
  MockRemoveWatchlist() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.MovieRepository get repository =>
      (super.noSuchMethod(
            Invocation.getter(#repository),
            returnValue: _FakeMovieRepository_3(
              this,
              Invocation.getter(#repository),
            ),
          )
          as _i5.MovieRepository);

  @override
  _i8.Future<_i2.Either<_i9.Failure, String>> execute(
    _i11.MovieDetail? movie,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#execute, [movie]),
            returnValue: _i8.Future<_i2.Either<_i9.Failure, String>>.value(
              _FakeEither_0<_i9.Failure, String>(
                this,
                Invocation.method(#execute, [movie]),
              ),
            ),
          )
          as _i8.Future<_i2.Either<_i9.Failure, String>>);
}

/// A class which mocks [GetWatchlistMovies].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetWatchlistMovies extends _i1.Mock
    implements _i32.GetWatchlistMovies {
  MockGetWatchlistMovies() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>> execute() =>
      (super.noSuchMethod(
            Invocation.method(#execute, []),
            returnValue:
                _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>>.value(
                  _FakeEither_0<_i9.Failure, List<_i10.Movie>>(
                    this,
                    Invocation.method(#execute, []),
                  ),
                ),
          )
          as _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>>);
}

/// A class which mocks [SearchMovies].
///
/// See the documentation for Mockito's code generation for more information.
class MockSearchMovies extends _i1.Mock implements _i33.SearchMovies {
  MockSearchMovies() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.MovieRepository get repository =>
      (super.noSuchMethod(
            Invocation.getter(#repository),
            returnValue: _FakeMovieRepository_3(
              this,
              Invocation.getter(#repository),
            ),
          )
          as _i5.MovieRepository);

  @override
  _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>> execute(
    String? query,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#execute, [query]),
            returnValue:
                _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>>.value(
                  _FakeEither_0<_i9.Failure, List<_i10.Movie>>(
                    this,
                    Invocation.method(#execute, [query]),
                  ),
                ),
          )
          as _i8.Future<_i2.Either<_i9.Failure, List<_i10.Movie>>>);
}

/// A class which mocks [GetOnTheAirTVSeries].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetOnTheAirTVSeries extends _i1.Mock
    implements _i34.GetOnTheAirTVSeries {
  MockGetOnTheAirTVSeries() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.TVSeriesRepository get repository =>
      (super.noSuchMethod(
            Invocation.getter(#repository),
            returnValue: _FakeTVSeriesRepository_4(
              this,
              Invocation.getter(#repository),
            ),
          )
          as _i6.TVSeriesRepository);

  @override
  _i8.Future<_i2.Either<_i9.Failure, List<_i17.TVSeries>>> execute() =>
      (super.noSuchMethod(
            Invocation.method(#execute, []),
            returnValue:
                _i8.Future<_i2.Either<_i9.Failure, List<_i17.TVSeries>>>.value(
                  _FakeEither_0<_i9.Failure, List<_i17.TVSeries>>(
                    this,
                    Invocation.method(#execute, []),
                  ),
                ),
          )
          as _i8.Future<_i2.Either<_i9.Failure, List<_i17.TVSeries>>>);
}

/// A class which mocks [GetPopularTVSeries].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetPopularTVSeries extends _i1.Mock
    implements _i35.GetPopularTVSeries {
  MockGetPopularTVSeries() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.TVSeriesRepository get repository =>
      (super.noSuchMethod(
            Invocation.getter(#repository),
            returnValue: _FakeTVSeriesRepository_4(
              this,
              Invocation.getter(#repository),
            ),
          )
          as _i6.TVSeriesRepository);

  @override
  _i8.Future<_i2.Either<_i9.Failure, List<_i17.TVSeries>>> execute() =>
      (super.noSuchMethod(
            Invocation.method(#execute, []),
            returnValue:
                _i8.Future<_i2.Either<_i9.Failure, List<_i17.TVSeries>>>.value(
                  _FakeEither_0<_i9.Failure, List<_i17.TVSeries>>(
                    this,
                    Invocation.method(#execute, []),
                  ),
                ),
          )
          as _i8.Future<_i2.Either<_i9.Failure, List<_i17.TVSeries>>>);
}

/// A class which mocks [GetTopRatedTVSeries].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetTopRatedTVSeries extends _i1.Mock
    implements _i36.GetTopRatedTVSeries {
  MockGetTopRatedTVSeries() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.TVSeriesRepository get repository =>
      (super.noSuchMethod(
            Invocation.getter(#repository),
            returnValue: _FakeTVSeriesRepository_4(
              this,
              Invocation.getter(#repository),
            ),
          )
          as _i6.TVSeriesRepository);

  @override
  _i8.Future<_i2.Either<_i9.Failure, List<_i17.TVSeries>>> execute() =>
      (super.noSuchMethod(
            Invocation.method(#execute, []),
            returnValue:
                _i8.Future<_i2.Either<_i9.Failure, List<_i17.TVSeries>>>.value(
                  _FakeEither_0<_i9.Failure, List<_i17.TVSeries>>(
                    this,
                    Invocation.method(#execute, []),
                  ),
                ),
          )
          as _i8.Future<_i2.Either<_i9.Failure, List<_i17.TVSeries>>>);
}

/// A class which mocks [GetTVSeriesDetail].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetTVSeriesDetail extends _i1.Mock implements _i37.GetTVSeriesDetail {
  MockGetTVSeriesDetail() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.TVSeriesRepository get repository =>
      (super.noSuchMethod(
            Invocation.getter(#repository),
            returnValue: _FakeTVSeriesRepository_4(
              this,
              Invocation.getter(#repository),
            ),
          )
          as _i6.TVSeriesRepository);

  @override
  _i8.Future<_i2.Either<_i9.Failure, _i18.TVSeriesDetail>> execute(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#execute, [id]),
            returnValue:
                _i8.Future<_i2.Either<_i9.Failure, _i18.TVSeriesDetail>>.value(
                  _FakeEither_0<_i9.Failure, _i18.TVSeriesDetail>(
                    this,
                    Invocation.method(#execute, [id]),
                  ),
                ),
          )
          as _i8.Future<_i2.Either<_i9.Failure, _i18.TVSeriesDetail>>);
}

/// A class which mocks [GetTVSeriesRecommendations].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetTVSeriesRecommendations extends _i1.Mock
    implements _i38.GetTVSeriesRecommendations {
  MockGetTVSeriesRecommendations() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.TVSeriesRepository get repository =>
      (super.noSuchMethod(
            Invocation.getter(#repository),
            returnValue: _FakeTVSeriesRepository_4(
              this,
              Invocation.getter(#repository),
            ),
          )
          as _i6.TVSeriesRepository);

  @override
  _i8.Future<_i2.Either<_i9.Failure, List<_i17.TVSeries>>> execute(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#execute, [id]),
            returnValue:
                _i8.Future<_i2.Either<_i9.Failure, List<_i17.TVSeries>>>.value(
                  _FakeEither_0<_i9.Failure, List<_i17.TVSeries>>(
                    this,
                    Invocation.method(#execute, [id]),
                  ),
                ),
          )
          as _i8.Future<_i2.Either<_i9.Failure, List<_i17.TVSeries>>>);
}

/// A class which mocks [GetTVWatchlistStatus].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetTVWatchlistStatus extends _i1.Mock
    implements _i39.GetTVWatchlistStatus {
  MockGetTVWatchlistStatus() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.TVSeriesRepository get repository =>
      (super.noSuchMethod(
            Invocation.getter(#repository),
            returnValue: _FakeTVSeriesRepository_4(
              this,
              Invocation.getter(#repository),
            ),
          )
          as _i6.TVSeriesRepository);

  @override
  _i8.Future<bool> execute(int? id) =>
      (super.noSuchMethod(
            Invocation.method(#execute, [id]),
            returnValue: _i8.Future<bool>.value(false),
          )
          as _i8.Future<bool>);
}

/// A class which mocks [SaveTVWatchlist].
///
/// See the documentation for Mockito's code generation for more information.
class MockSaveTVWatchlist extends _i1.Mock implements _i40.SaveTVWatchlist {
  MockSaveTVWatchlist() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.TVSeriesRepository get repository =>
      (super.noSuchMethod(
            Invocation.getter(#repository),
            returnValue: _FakeTVSeriesRepository_4(
              this,
              Invocation.getter(#repository),
            ),
          )
          as _i6.TVSeriesRepository);

  @override
  _i8.Future<_i2.Either<_i9.Failure, String>> execute(
    _i18.TVSeriesDetail? tvSeries,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#execute, [tvSeries]),
            returnValue: _i8.Future<_i2.Either<_i9.Failure, String>>.value(
              _FakeEither_0<_i9.Failure, String>(
                this,
                Invocation.method(#execute, [tvSeries]),
              ),
            ),
          )
          as _i8.Future<_i2.Either<_i9.Failure, String>>);
}

/// A class which mocks [RemoveTVWatchlist].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoveTVWatchlist extends _i1.Mock implements _i41.RemoveTVWatchlist {
  MockRemoveTVWatchlist() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.TVSeriesRepository get repository =>
      (super.noSuchMethod(
            Invocation.getter(#repository),
            returnValue: _FakeTVSeriesRepository_4(
              this,
              Invocation.getter(#repository),
            ),
          )
          as _i6.TVSeriesRepository);

  @override
  _i8.Future<_i2.Either<_i9.Failure, String>> execute(
    _i18.TVSeriesDetail? tvSeries,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#execute, [tvSeries]),
            returnValue: _i8.Future<_i2.Either<_i9.Failure, String>>.value(
              _FakeEither_0<_i9.Failure, String>(
                this,
                Invocation.method(#execute, [tvSeries]),
              ),
            ),
          )
          as _i8.Future<_i2.Either<_i9.Failure, String>>);
}

/// A class which mocks [GetWatchlistTVSeries].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetWatchlistTVSeries extends _i1.Mock
    implements _i42.GetWatchlistTVSeries {
  MockGetWatchlistTVSeries() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.TVSeriesRepository get repository =>
      (super.noSuchMethod(
            Invocation.getter(#repository),
            returnValue: _FakeTVSeriesRepository_4(
              this,
              Invocation.getter(#repository),
            ),
          )
          as _i6.TVSeriesRepository);

  @override
  _i8.Future<_i2.Either<_i9.Failure, List<_i17.TVSeries>>> execute() =>
      (super.noSuchMethod(
            Invocation.method(#execute, []),
            returnValue:
                _i8.Future<_i2.Either<_i9.Failure, List<_i17.TVSeries>>>.value(
                  _FakeEither_0<_i9.Failure, List<_i17.TVSeries>>(
                    this,
                    Invocation.method(#execute, []),
                  ),
                ),
          )
          as _i8.Future<_i2.Either<_i9.Failure, List<_i17.TVSeries>>>);
}

/// A class which mocks [SearchTVSeries].
///
/// See the documentation for Mockito's code generation for more information.
class MockSearchTVSeries extends _i1.Mock implements _i43.SearchTVSeries {
  MockSearchTVSeries() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i6.TVSeriesRepository get repository =>
      (super.noSuchMethod(
            Invocation.getter(#repository),
            returnValue: _FakeTVSeriesRepository_4(
              this,
              Invocation.getter(#repository),
            ),
          )
          as _i6.TVSeriesRepository);

  @override
  _i8.Future<_i2.Either<_i9.Failure, List<_i17.TVSeries>>> execute(
    String? query,
  ) =>
      (super.noSuchMethod(
            Invocation.method(#execute, [query]),
            returnValue:
                _i8.Future<_i2.Either<_i9.Failure, List<_i17.TVSeries>>>.value(
                  _FakeEither_0<_i9.Failure, List<_i17.TVSeries>>(
                    this,
                    Invocation.method(#execute, [query]),
                  ),
                ),
          )
          as _i8.Future<_i2.Either<_i9.Failure, List<_i17.TVSeries>>>);
}

/// A class which mocks [Client].
///
/// See the documentation for Mockito's code generation for more information.
class MockHttpClient extends _i1.Mock implements _i7.Client {
  MockHttpClient() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i8.Future<_i7.Response> head(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(
            Invocation.method(#head, [url], {#headers: headers}),
            returnValue: _i8.Future<_i7.Response>.value(
              _FakeResponse_5(
                this,
                Invocation.method(#head, [url], {#headers: headers}),
              ),
            ),
          )
          as _i8.Future<_i7.Response>);

  @override
  _i8.Future<_i7.Response> get(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(
            Invocation.method(#get, [url], {#headers: headers}),
            returnValue: _i8.Future<_i7.Response>.value(
              _FakeResponse_5(
                this,
                Invocation.method(#get, [url], {#headers: headers}),
              ),
            ),
          )
          as _i8.Future<_i7.Response>);

  @override
  _i8.Future<_i7.Response> post(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i44.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #post,
              [url],
              {#headers: headers, #body: body, #encoding: encoding},
            ),
            returnValue: _i8.Future<_i7.Response>.value(
              _FakeResponse_5(
                this,
                Invocation.method(
                  #post,
                  [url],
                  {#headers: headers, #body: body, #encoding: encoding},
                ),
              ),
            ),
          )
          as _i8.Future<_i7.Response>);

  @override
  _i8.Future<_i7.Response> put(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i44.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #put,
              [url],
              {#headers: headers, #body: body, #encoding: encoding},
            ),
            returnValue: _i8.Future<_i7.Response>.value(
              _FakeResponse_5(
                this,
                Invocation.method(
                  #put,
                  [url],
                  {#headers: headers, #body: body, #encoding: encoding},
                ),
              ),
            ),
          )
          as _i8.Future<_i7.Response>);

  @override
  _i8.Future<_i7.Response> patch(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i44.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #patch,
              [url],
              {#headers: headers, #body: body, #encoding: encoding},
            ),
            returnValue: _i8.Future<_i7.Response>.value(
              _FakeResponse_5(
                this,
                Invocation.method(
                  #patch,
                  [url],
                  {#headers: headers, #body: body, #encoding: encoding},
                ),
              ),
            ),
          )
          as _i8.Future<_i7.Response>);

  @override
  _i8.Future<_i7.Response> delete(
    Uri? url, {
    Map<String, String>? headers,
    Object? body,
    _i44.Encoding? encoding,
  }) =>
      (super.noSuchMethod(
            Invocation.method(
              #delete,
              [url],
              {#headers: headers, #body: body, #encoding: encoding},
            ),
            returnValue: _i8.Future<_i7.Response>.value(
              _FakeResponse_5(
                this,
                Invocation.method(
                  #delete,
                  [url],
                  {#headers: headers, #body: body, #encoding: encoding},
                ),
              ),
            ),
          )
          as _i8.Future<_i7.Response>);

  @override
  _i8.Future<String> read(Uri? url, {Map<String, String>? headers}) =>
      (super.noSuchMethod(
            Invocation.method(#read, [url], {#headers: headers}),
            returnValue: _i8.Future<String>.value(
              _i16.dummyValue<String>(
                this,
                Invocation.method(#read, [url], {#headers: headers}),
              ),
            ),
          )
          as _i8.Future<String>);

  @override
  _i8.Future<_i45.Uint8List> readBytes(
    Uri? url, {
    Map<String, String>? headers,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#readBytes, [url], {#headers: headers}),
            returnValue: _i8.Future<_i45.Uint8List>.value(_i45.Uint8List(0)),
          )
          as _i8.Future<_i45.Uint8List>);

  @override
  _i8.Future<_i7.StreamedResponse> send(_i7.BaseRequest? request) =>
      (super.noSuchMethod(
            Invocation.method(#send, [request]),
            returnValue: _i8.Future<_i7.StreamedResponse>.value(
              _FakeStreamedResponse_6(
                this,
                Invocation.method(#send, [request]),
              ),
            ),
          )
          as _i8.Future<_i7.StreamedResponse>);

  @override
  void close() => super.noSuchMethod(
    Invocation.method(#close, []),
    returnValueForMissingStub: null,
  );
}
